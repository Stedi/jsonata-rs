name: Release to crates.io

on:
  push:
    tags:
      - "v*.*.*" # Trigger on version tags like v0.1.9
  pull_request_target:
    branches:
      - rs/release_pipeline # Or specify branches if needed

env:
  CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Log Environment Info
        run: |
          echo "PATH: $PATH"
          echo "Current directory: $(pwd)"
          ls -la # List contents of current directory

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable # Ensure the stable Rust version

      - name: Verify Cargo Credentials
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "Checking Cargo credentials..."
          if [ -z "$CARGO_REGISTRY_TOKEN" ]; then
            echo "Error: CARGO_REGISTRY_TOKEN is not set."
            exit 1
          else
            echo "CARGO_REGISTRY_TOKEN is set."
          fi

      - name: Debug Cargo Config
        run: |
          cargo --version
          echo "Cargo home: $CARGO_HOME"
          echo "Cargo registry token configured."

      - name: Publish to crates.io
        if: github.event_name != 'pull_request'
        run: cargo publish --token $CARGO_REGISTRY_TOKEN

      - name: Publish to crates.io (Simulated for PR)
        if: github.event_name == 'pull_request'
        run: echo "Simulating cargo publish for PR testing."

      - name: List Target Directory Contents
        run: ls -la target/release # Check if .crate files exist in release folder

      - name: Create GitHub Release
        if: github.event_name != 'pull_request'
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          files: target/release/*.crate # Adjust if necessary
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLIC_PACKAGE_GITHUB_TOKEN }}

      - name: Create GitHub Release (Simulated for PR)
        if: github.event_name == 'pull_request'
        run: echo "Simulating GitHub Release creation for PR testing."
